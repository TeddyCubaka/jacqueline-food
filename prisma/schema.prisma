generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @unique @default(uuid())
  name     String @unique
  mail     String @unique
  password String

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  updateBy  String?
  createBy  String?
  isDeleted Boolean?  @default(false)
}

model Currency {
  id           String @id @unique @default(uuid())
  name         String @unique
  exchangeRate Int

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  updateBy  String?
  createBy  String?
  isDeleted Boolean?  @default(false)

  products Product[]
  Order    Order[]
}

model ProductCategory {
  id   String @id @unique @default(uuid())
  name String @unique

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  updateBy  String?
  createBy  String?
  isDeleted Boolean?  @default(false)

  products Product[]
}

model Product {
  id          String @id @unique @default(uuid())
  url         String
  name        String @unique
  price       Float
  litrage     String
  description String

  currencyId        String
  productCategoryId String?

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  updateBy  String?
  createBy  String?
  isDeleted Boolean?  @default(false)

  currency        Currency         @relation(fields: [currencyId], references: [id])
  productCategory ProductCategory? @relation(fields: [productCategoryId], references: [id])

  orderLines OrderLine[]
}

model Client {
  id             String  @id @unique @default(uuid())
  fullName       String
  phone          String  @unique
  address        String?
  isWhatsappOpen Boolean @default(true)

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  updateBy  String?
  createBy  String?
  isDeleted Boolean?  @default(false)
  orders    Order[]
  Booking   Booking[]
}

enum OrderStatus {
  pending
  validate
  inProgress
  delivred
}

model Order {
  id              String @id @unique @default(uuid())
  total           Float
  clientId        String
  currencyId      String
  referenceNumber String

  status   OrderStatus
  isClosed Boolean @default(false)

  updateBy  String?
  createBy  String?
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  isDeleted Boolean?  @default(false)

  client   Client    @relation(fields: [clientId], references: [id])
  currency Currency? @relation(fields: [currencyId], references: [id])

  lines OrderLine[]
}

model OrderLine {
  id        String @id @unique @default(uuid())
  orderId   String
  productId String
  quantity  String

  updateBy  String?
  createBy  String?
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  isDeleted Boolean?  @default(false)

  order   Order   @relation(fields: [orderId], references: [id])
  Product Product @relation(fields: [productId], references: [id])
}

model Booking {
  id          String   @id @unique @default(uuid())
  clientId    String
  date        DateTime
  serviceType String
  place       String

  updateBy  String?
  createBy  String?
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  isDeleted Boolean?  @default(false)

  client Client @relation(fields: [clientId], references: [id])
}
